# Role: ensembl

- name: Create Ensembl install directory
  file: path="{{ item }}" state=directory mode=0755
  with_items:
    - "{{ ensembl_install_dir }}"
    - "{{ logdir }}"
  register: ensembl_dir_exists

- name: Find git
  debug: msg="{{ ansible_env }}"

- name: Find install dir
  debug: msg="{{ ensembl_install_dir }}"

- name: Install Ensembl repos
  git: repo="{{ item.repo }}" dest="{{ ensembl_install_dir }}/{{ item.dir }}" version="{{ item.version | default(ensembl_repo_version) }}" clone=yes
  with_items:
       - { repo: 'https://github.com/Ensembl/ensembl-test.git', dir: ensembl-test }
       - { repo: 'https://github.com/Ensembl/ensembl.git', dir: ensembl }
       - { repo: 'https://github.com/Ensembl/ensembl-compara.git', dir: ensembl-compara }
       - { repo: 'https://github.com/Ensembl/ensembl-variation.git', dir: ensembl-variation }
       - { repo: 'https://github.com/Ensembl/ensembl-vep.git', dir: ensembl-vep }
       - { repo: 'https://github.com/Ensembl/VEP_plugins.git', dir: VEP_plugins }
       - { repo: 'https://github.com/Ensembl/ensembl-funcgen.git', dir: ensembl-funcgen }
       - { repo: 'https://github.com/Ensembl/ensembl-io.git', dir: ensembl-io }
       - { repo: 'https://github.com/bioperl/bioperl-live.git', dir: bioperl-live,  version: bioperl-release-1-6-1 }
       - { repo: 'https://github.com/samtools/htslib.git', dir: htslib, version: 'master' }
  when: ensembl_dir_exists
  register: repos_exist

- name: Look at homedir
  shell: "ls -la {{ homedir }}"
  register: homedir_ls

- name: Check homedir
  debug: msg="{{ homedir_ls.stdout }}"

#- include: local_perl.yml
#  when: local_perl is defined and local_perl == true

#- include: ebi_perl.yml
#  when: ebi_perl is defined and ebi_perl == true

- name: Configure ensembl environment
  lineinfile: dest="{{ PERL_RC | default('~/.bashrc') }}" line="{{ item }}"
  with_items:
       - export HTSLIB_DIR={{ ensembl_install_dir}}/htslib
       - export PERL5LIB={{ ensembl_install_dir }}/ensembl-compara/modules:{{ ensembl_install_dir }}/ensembl-funcgen/modules:{{ ensembl_install_dir }}/ensembl-hdf5/modules:{{ ensembl_install_dir }}/ensembl-io/modules:{{ ensembl_install_dir }}/ensembl/modules:{{ ensembl_install_dir }}/ensembl-test/modules:{{ ensembl_install_dir }}/ensembl-variation/modules:{{ ensembl_install_dir }}/ensembl-vep/modules:{{ ensembl_install_dir }}/ensembl-rest/lib:{{ ensembl_install_dir }}/ensembl-git-tools/lib:{{ ensembl_install_dir }}/ensembl-hdf5/modules:{{ ensembl_install_dir }}/bioperl-live:$PERL5LIB
       - export PATH={{ ensembl_install_dir }}/ensembl-git-tools/bin:{{ ensembl_install_dir }}/ensembl-git-tools/advanced_bin:{{ ensembl_install_dir }}/ensembl-variation/C_code:{{ ensembl_install_dir }}/htslib:$PATH
  when: repos_exist
  register: paths_set

- name: Build HTSLIB
  shell: "make"
  args:
    chdir: "{{ ensembl_install_dir }}/htslib"
    creates: libhts.so
  when: repos_exist
  register: htslib_built

- name: Build variation C progs
  shell: "make && make install"
  args:
    chdir: "{{ ensembl_install_dir }}/ensembl-variation/C_code"
    creates: ../calc_genotypes
  when: htslib_built and paths_set

#  command: "sudo -iu {{ ensembl_user }} cpanm -v --installdeps --with-recommends --notest --cpanfile={{ ensembl_install_dir }}/{{ item }}/cpanfile ."
#  command: "source $SHARE_PATH/.bashrc_linuxbrew && source $SHARE_PATH/.bashrc_ensembl && cpanm -v --installdeps --with-recommends --notest --cpanfile={{ ensembl_install_dir }}/{{ item }}/cpanfile ."

- name: Install Ensembl repo cpan dependencies
  shell: ". {{ PERL_RC | default('~/.bashrc') }} && cpanm -v --installdeps --with-recommends --notest --cpanfile={{ ensembl_install_dir }}/{{ item }}/cpanfile ."
  args:
    chdir="{{ ensembl_install_dir }}/{{ item }}"
  with_items:
       - ensembl
       - ensembl-compara
       - ensembl-variation
       - ensembl-git-tools
  when: repos_exist
