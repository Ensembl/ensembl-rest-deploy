- name: Show groups
  command: /usr/bin/groups
  register: groups_list

- debug: var=groups_list

- name: Stat the data directories
  stat: path="{{ item }}" get_checksum=False get_md5=False
  with_items:
    - "{{ data_root }}"
    - "{{ vep_cache_dir }}"
    - "{{ vep_cache_dir }}/homo_sapiens/{{ ensembl_release }}_{{ human_assembly }}"
    - "{{ vep_plugin_dir }}"
    - "{{ vep_plugin_data_dir }}"
  register: release_dirs

- name: Ensure the data directories exist
  fail: msg="Directory {{ item.item }} doesn't exist"
  when:
    - not item | skipped
    - item.stat.exists == false
  with_items: "{{ release_dirs.results }}"

- name: Stat the datafiles
  stat:  path="{{ item }}" get_checksum=False get_md5=False
  with_items:
    - "{{ homo_sapiens_fasta }}"
  register: release_datafiles

- name: Ensure the datafiles exist
  fail: msg="Datafile {{ item.item }} doesn't exist"
  when:
    - not item | skipped
    - item.stat.exists == false
  with_items: "{{ release_datafiles.results }}"

- name: Checking eQTL file defined if installing HDF5
  fail: msg="install_hdf5 is true but eqtl_file is not defined"
  when: 
    - install_hdf5 
    - eqtl_file is undefined

- name: Check eQTL file
  stat:  path="{{ eqtl_file }}" get_checksum=False get_md5=False
  when: eqtl_file is defined
  register: eqtl_file_stat

- name: Ensure eQTL file exists
  fail: msg="Datafile {{ eqtl_file }} doesn't exist"
  when: 
    - eqtl_file is defined 
    - eqtl_file_stat.stat.exists == false

- name: Checking HAL dir defined if installing progressiveCactus
  fail: msg="install_progressivecactus is true but hal_file_dir is not defined"
  when: 
   - install_progressivecactus==true
   - hal_file_dir is not defined

- name: Check HAL dir
  stat: path="{{ hal_file_dir }}" get_checksum=False get_md5=False
  when: hal_file_dir is defined
  register: hal_dir_stat

- name: Ensure HAL dir exists
  fail: msg="Datafile {{ hal_file_dir }} doesn't exist"
  when: hal_file_dir is defined and hal_dir_stat.stat.exists == false

- name: ga4gh features config (grch37 only)
  stat: path="{{ ga4gh_features_config }}" get_checksum=False get_md5=False
  register: ga4gh_features
  when: ga4gh_features_config is defined

- name: Ensure ga4gh features config exists (grch37 only)
  fail: msg="File {{ ga4gh_features_config}} doesn't exist"
  when: 
    - ga4gh_features_config is defined 
    - ga4gh_features.stat.exists == false

- name: ga4gh compliance datafile (grch37 only)
  stat: path="{{ ga4gh_compliance_file }}" get_checksum=False get_md5=False
  register: ga4gh_compliance
  when: ga4gh_compliance_file is defined

- name: Ensure ga4gh compliance datafile exists (grch37 only)
  fail: msg="File {{ ga4gh_compliance_file }} doesn't exist"
  when: 
    - ga4gh_compliance_file is defined
    - ga4gh_compliance.stat.exists == false

- name: human genotype directory (grch38 only)
  stat: path="{{ human_genotypes_dir }}" get_checksum=False get_md5=False
  register: human_genotypes_dir_stat
  when: human_genotypes_dir is defined

- name: Ensure human genotype directory exists (grch38 only)
  fail: msg="File {{ human_genotypes_dir }} doesn't exist"
  when:
    - human_genotypes_dir is defined 
    - human_genotypes_dir_stat != ""
    - human_genotypes_dir_stat.stat.exists == false
