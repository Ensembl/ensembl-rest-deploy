# Role: rest_config

- name: Create local copy of REST configs
  local_action: template src="{{ item.src }}" dest="{{ item.dest }}" mode=0640
  with_items:
    - { src: "{{ rest_private_dir }}/conf/ensembl_rest.conf.j2", dest: "{{ rest_private_dir }}/conf/ensembl_rest.conf" }
    - { src: "{{ rest_private_dir }}/conf/ensrest.psgi.j2", dest: "{{ rest_private_dir }}/conf/ensrest.psgi" }
    # - { src: "{{ rest_private_dir }}/conf/ga_references.json.j2", dest: "{{ rest_private_dir }}/conf/ga_references_{{ human_assembly }}.json" }
    # - { src: "{{ rest_private_dir }}/conf/{{ ga_vcf_config_json }}", dest: "{{ rest_private_dir }}/conf/ga_vcf_config_{{ human_assembly }}.json" }
    - { src: "{{ rest_private_dir }}/conf/{{ vcf_config_json }}", dest: "{{ rest_private_dir }}/conf/vcf_config.json" }
    # - { src: "{{ rest_private_dir }}/conf/vep_plugin_config.txt.j2", dest: "{{ rest_private_dir }}/conf/vep_plugin_config.txt" }
#  when: release_loaded

- name: Deploying REST configs
  template: src="{{ item.src }}" dest="{{ item.dest }}" mode=0640
  with_items:
    - { src: "{{ rest_private_dir }}/conf/ensembl_rest.conf.j2", dest: "{{ ensembl_install_dir }}/ensembl-rest/configurations/production/ensembl_rest.conf" }
    - { src: "{{ rest_private_dir }}/conf/ensrest.psgi.j2", dest: "{{ ensembl_install_dir }}/ensembl-rest/configurations/production/ensrest.psgi" }
    # - { src: "{{ rest_private_dir }}/conf/ga_references.json.j2", dest: "{{ ga4gh_reference_config }}" }
    # - { src: "{{ rest_private_dir }}/conf/{{ ga_vcf_config_json }}", dest: "{{ ga4gh_config }}" }
    - { src: "{{ rest_private_dir }}/conf/{{ vcf_config_json }}", dest: "{{ vcf_config }}" }
    # - { src: "{{ rest_private_dir }}/conf/vep_plugin_config.txt.j2", dest: "{{ vep_plugin_config }}" }
#  when: release_loaded

# # Special parameters for GRCh37
# - name: ga4gh features config (local)
#   local_action: template src="{{ rest_private_dir }}/conf/ga_features.json.j2" dest="{{ rest_private_dir }}/conf/ga_features_{{ human_assembly }}.json" mode=0640
#   when: ga4gh_features_config is defined

# - name: ga4gh features config (remote)
#   template: src="{{ rest_private_dir }}/conf/ga_features.json.j2" dest="{{ ga4gh_features_config|default('') }}" mode=0640
#   when: ga4gh_features_config is defined

- name: Deal with password not being required
  lineinfile:
    dest="{{ ensembl_install_dir }}/ensembl-rest/configurations/production/ensembl_rest.conf"
    state=absent
    regexp="^\s*pass"
  when: db_pass is not defined

- name: Set status file if available
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_LOG_ROOT={{ rest_log_root }}"
  when: rest_log_root is defined

- name: Set status file if available
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_REST_STATUS={{ rest_status_file }}"
  when: rest_status_file is defined

- name: Set PID file if available
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_REST_PID={{ rest_pid_file }}"
  when: rest_pid_file is defined

- name: Set REST port if available
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_REST_PORT={{ ENSEMBL_REST_PORT }}"
  when: ENSEMBL_REST_PORT is defined

- name: Set REST workers if available
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_REST_WORKERS={{ ENSEMBL_REST_WORKERS }}"
  when: ENSEMBL_REST_WORKERS is defined

- name: Set REST backlog if available
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_REST_BACKLOG={{ ENSEMBL_REST_BACKLOG }}"
  when: ENSEMBL_REST_BACKLOG is defined

- name: Set REST max requests if available
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_REST_MAX_REQUESTS={{ ENSEMBL_REST_MAX_REQUESTS }}"
  when: ENSEMBL_REST_MAX_REQUESTS is defined

- set_fact:
    ens_log4perl: "{{ ensembl_install_dir }}/ensembl-rest/configurations/production/log4perl.conf"
  
- name: Configure logging
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENS_REST_LOG4PERL={{ ENSEMBL_REST_LOG4PERL | default(ens_log4perl) }}"

- name: Set TDP_HOME for Catalyst
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export TDP_HOME={{ ensembl_install_dir }}/ensembl-rest/"

- set_fact:
    ens_rest_config: "{{ ensembl_install_dir }}/ensembl-rest/configurations/production/ensembl_rest.conf"

- name: Set REST config file
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_REST_CONFIG={{ ENSEMBL_REST_CONFIG | default(ens_rest_config) }}"

- name: Set Ensembl init config to source
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_INIT_CONFIG={{ PERL_RC | default('~/.bashrc') }}"

- name: Create REST init script
  shell: ". {{ PERL_RC | default('~/.bashrc') }} && perl server_control.pl get_init_file >ensembl_rest"
  args:
    chdir: "{{ ensembl_install_dir }}/ensembl-rest/bin/production"
  register: init_exists

- debug: msg="{{ init_exists.stdout }}"

- name: Change init file to be executable
  file:
    path="{{ ensembl_install_dir }}/ensembl-rest/bin/production/ensembl_rest"
    mode=0755
  when: init_exists

- name: Alter the style files for GRCh37
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
  with_items:
    - { src: "{{ rest_private_dir }}/static/wrapper.tt", dest: "{{ ensembl_install_dir }}/ensembl-rest/root/wrapper.tt" }
    - { src: "{{ rest_private_dir }}/static/10-bootstrap.css", dest: "{{ ensembl_install_dir }}/ensembl-rest/root/static/css/10-bootstrap.css" }
  when: human_assembly == "GRCh37"

- name: Fix ROOT directory for unusual filesystems
  lineinfile:
    dest="{{ PERL_RC | default('~/.bashrc') }}"
    line="export ENSEMBL_REST_HOME=$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" >/dev/null 2>&1 && pwd)/ensembl-rest"
  when: fix_catalyst_root_dir|bool
